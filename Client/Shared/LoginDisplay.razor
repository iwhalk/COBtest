
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation
@using Obra.Client.Stores;
@inject SignOutSessionStateManager SignOutManager
<div class="min-w-screen min-h-screen" @onclick="() => CloseBur.InvokeAsync()"></div>
<div class="fixed top-20 lg:right-0">
    <div class="bg-white h-84 w-[13.5rem] md:w-[15rem] xl:w-[16.5rem] 2xl:w-[18rem] -mt-2 flex flex-col border-1 border-black lg:rounded-l-lg">

        <div class="flex ml-2 mt-2">
            <text for="" class="self-start text-sm md:text-base lg:text-lg xl:text-xl 2xl:text-2xl mb-1"><tspan>Seguimiento</tspan></text>
        </div>
        <button @onclick="() => RedirectProjectTracking()" class="flex justify-start ml-5">
            <text for="" class="self-start text-xs md:text-sm lg:text-base xl:text-lg 2xl:text-xl hover:text-sky-700"><tspan>Seguimiento de Proyecto</tspan></text>
        </button>

        <div class="flex ml-2 mt-2">
            <text for="" class="self-start text-sm md:text-base lg:text-lg xl:text-xl 2xl:text-2xl"><tspan>Reportes</tspan></text>
        </div>
        <div class="flex ml-5 mt-1">
            <text for="" class="self-start text-xs md:text-sm lg:text-base xl:text-lg 2xl:text-xl"><tspan>Detalles</tspan></text>
        </div>
        <button @onclick="() => RedirectDetailedSummaryByApartment()" class="flex justify-start ml-8">
            <text for="" class="text-xs md:text-sm lg:text-sm xl:text-base 2xl:text-lg hover:text-sky-700"><tspan>Por Departamento</tspan></text>
        </button>
        <button @onclick="() => RedirectActivityDetails()" class="flex justify-start ml-8">
            <text for="" class="text-xs md:text-sm lg:text-sm xl:text-base 2xl:text-lg hover:text-sky-700"><tspan>Por Actividad</tspan></text>
        </button>

        <div class="flex ml-5 mt-1">
            <text for="" class="self-start text-xs md:text-sm lg:text-base xl:text-lg 2xl:text-xl"><tspan>Resumen</tspan></text>
        </div>
        <button @onclick="() => RedirectProgressForApartment()" class="flex justify-start ml-8">
            <text for="" class="text-xs md:text-sm lg:text-sm xl:text-base 2xl:text-lg hover:text-sky-700"><tspan>Departamento</tspan></text>
        </button>
        <button @onclick="() => RedirectProgressForActivity()" class="flex justify-start ml-8">
            <text for="" class="text-xs md:text-sm lg:text-sm xl:text-base 2xl:text-lg hover:text-sky-700"><tspan>Actividad</tspan></text>
        </button>
        <button @onclick="() => RedirectProgressActivityForAparment()" class="flex justify-start ml-8">
            <text for="" class="text-xs md:text-sm lg:text-sm xl:text-base 2xl:text-lg hover:text-sky-700"><tspan>Actividad Por Departamento</tspan></text>
        </button>
        <button @onclick="() => RedirectProgressAparmentForActivity()" class="flex justify-start ml-8">
            <text for="" class="text-xs md:text-sm lg:text-sm xl:text-base 2xl:text-lg hover:text-sky-700"><tspan>Departamento Por Actividad</tspan></text>
        </button>

        <hr class="w-[12.5rem] md:w-[14rem] xl:w-[15.5rem] 2xl:w-[17rem] mt-2 self-center">
        <button @onclick="ShowModalLogOut" type="submit" class="inline-flex justify-center">
            <text for="" class="self-center text-xs md:text-sm lg:text-sm xl:text-base 2xl:text-lg mb-1"><tspan>Cerrar Sesión</tspan></text>
            <svg xmlns="http://www.w3.org/2000/svg" class="w-[2rem] lg:w-[3rem] h-[2rem] lg:h-[3rem]" viewBox="0 0 437 399">
                <g id="Grupo_335" data-name="Grupo 335" transform="translate(24613 17130)">
                    <path id="Icon_metro-exit" data-name="Icon metro-exit" d="M150.6,146.759V117.793H88.923V88.827H150.6V59.861l37.008,43.449Zm-12.336-14.483v57.932H76.587v43.449L2.571,190.209V1.928h135.7V74.344H125.931V16.411H27.243L76.587,45.377V175.726h49.344V132.276Z" transform="translate(-24489.59 -17048.293)" fill="red" stroke="#2a6983" stroke-width="8" />
                </g>
            </svg>
        </button>
        @*</form>*@
    </div>
    <ModalTypeReceptionCertificates OnClick="ChangeOpenModal" ShowModal="@OpenModal"></ModalTypeReceptionCertificates>
    
    @if (ShowModal)
    {
        <div class="relative z-10" aria-labelledby="modal-title" role="dialog" aria-modal="true">
            <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>
            <div class="fixed inset-0 z-10 overflow-y-auto">
                <div class="flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0">
                    <div class="relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg">
                        <div class="bg-white px-4 pb-4 sm:p-6 sm:pb-4">
                            <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left">
                                <h3 class="text-lg font-medium leading-6 text-gray-900" id="modal-title">¿Seguro que quieres cerrar sesión?</h3>
                            </div>
                        </div>
                        <div class="bg-white px-14 py-3 flex">
                            <button @onclick="BeginLogOut" class="w-1/2 text-white bg-green-600 m-1 h-8">Si</button>
                            <button @onclick="ShowModalLogOut" class="w-1/2 text-white bg-red-600 m-1 h-8">No</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>


@code{
    private readonly ApplicationContext _context;
    public bool ShowModal { get; set; }
    private readonly NavigationManager _navigationManager;
    public bool OpenModal { get; set; } = false;
    public void ChangeOpenModal() => OpenModal = OpenModal ? false : true;

    [Parameter]
    public EventCallback CloseBur { get; set; }
    
    public LoginDisplay(ApplicationContext context, NavigationManager navigationManager)
    {
        _context = context;
        _navigationManager = navigationManager;
    }
    private async void BeginLogOut()
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }
    private void ShowModalLogOut()
    {
        ShowModal = ShowModal ? false : true;
    }
    public void RedirectProgressForApartment()
    {
        _navigationManager.NavigateTo("/ProgressForApartment");
    }
    public void RedirectProgressForActivity()
    {
        _navigationManager.NavigateTo("/ProgressForActivity");
    }
    public void RedirectProgressActivityForAparment()
    {
        _navigationManager.NavigateTo("/ProgressActivityForAparment");
    }
    public void RedirectProgressAparmentForActivity()
    {
        _navigationManager.NavigateTo("/ProgressAparmentForActivity");
    }
    public void RedirectDetailedSummaryByApartment()
    {
        _navigationManager.NavigateTo("/DetailedSummaryByApartment");
    }
    public void RedirectActivityDetails()
    {
        _navigationManager.NavigateTo("/ActivityDetails");
    }
    public void RedirectProjectTracking()
    {
        _navigationManager.NavigateTo("/ProjectTracking");
    }
}