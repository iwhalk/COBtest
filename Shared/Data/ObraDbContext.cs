// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using SharedLibrary.Models;

namespace SharedLibrary.Data
{
    public partial class ObraDbContext : DbContext
    {
        public ObraDbContext()
        {
        }

        public ObraDbContext(DbContextOptions<ObraDbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Activity> Activities { get; set; }
        public virtual DbSet<Apartment> Apartments { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Blob> Blobs { get; set; }
        public virtual DbSet<Building> Buildings { get; set; }
        public virtual DbSet<Element> Elements { get; set; }
        public virtual DbSet<ProgressLog> ProgressLogs { get; set; }
        public virtual DbSet<ProgressReport> ProgressReports { get; set; }
        public virtual DbSet<Status> Statuses { get; set; }
        public virtual DbSet<SubElement> SubElements { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Activity>(entity =>
            {
                entity.HasKey(e => e.IdActivity)
                    .HasName("PK__Activiti__CAB441F1BECDF6E3");
            });

            modelBuilder.Entity<Apartment>(entity =>
            {
                entity.HasKey(e => e.IdApartment)
                    .HasName("PK__Apartmen__C395DC3F32985CAF");
            });

            modelBuilder.Entity<Area>(entity =>
            {
                entity.HasKey(e => e.IdArea)
                    .HasName("PK__Areas__42A5C44CD07CA77C");

                entity.HasMany(d => d.IdActivities)
                    .WithMany(p => p.IdAreas)
                    .UsingEntity<Dictionary<string, object>>(
                        "AreaActivity",
                        l => l.HasOne<Activity>().WithMany().HasForeignKey("IdActivity").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AreaActivities_ID_Activity"),
                        r => r.HasOne<Area>().WithMany().HasForeignKey("IdArea").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_AreaActivities_ID_Areas"),
                        j =>
                        {
                            j.HasKey("IdArea", "IdActivity").HasName("PK_AreaActvities");

                            j.ToTable("AreaActivities");

                            j.IndexerProperty<int>("IdArea").HasColumnName("ID_Area");

                            j.IndexerProperty<int>("IdActivity").HasColumnName("ID_Activity");
                        });
            });

            modelBuilder.Entity<Blob>(entity =>
            {
                entity.HasKey(e => e.IdBlob)
                    .HasName("PK__Blobs__DED4FFECDD0E0187");
            });

            modelBuilder.Entity<Building>(entity =>
            {
                entity.HasKey(e => e.IdBuilding)
                    .HasName("PK__Building__369BC65331FE8412");
            });

            modelBuilder.Entity<Element>(entity =>
            {
                entity.HasKey(e => e.IdElement)
                    .HasName("PK__Elements__DEA2498C1B8254AD");

                entity.HasOne(d => d.IdActivityNavigation)
                    .WithMany(p => p.Elements)
                    .HasForeignKey(d => d.IdActivity)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Elements_ID_Activity");
            });

            modelBuilder.Entity<ProgressLog>(entity =>
            {
                entity.HasKey(e => e.IdProgressLog)
                    .HasName("PK__Progress__F031B417F3C2DA0F");

                entity.HasOne(d => d.IdProgressReportNavigation)
                    .WithMany(p => p.ProgressLogs)
                    .HasForeignKey(d => d.IdProgressReport)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ProgressLogs_ID_ProgressReport");

                entity.HasOne(d => d.IdStatusNavigation)
                    .WithMany(p => p.ProgressLogs)
                    .HasForeignKey(d => d.IdStatus)
                    .HasConstraintName("FK_ProgressLogs_ID_Status");

                entity.HasOne(d => d.IdSupervisorNavigation)
                    .WithMany(p => p.ProgressLogs)
                    .HasForeignKey(d => d.IdSupervisor)
                    .HasConstraintName("FK_ProgressLogs_ID_Supervisor");

                entity.HasMany(d => d.IdBlobs)
                    .WithMany(p => p.IdProgressLogs)
                    .UsingEntity<Dictionary<string, object>>(
                        "ProgressLogsBlob",
                        l => l.HasOne<Blob>().WithMany().HasForeignKey("IdBlobs").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ProgressLogsBlobs_ID_Blobs"),
                        r => r.HasOne<ProgressLog>().WithMany().HasForeignKey("IdProgressLog").OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_ProgressLogsBlobs_ID_ProgressLog"),
                        j =>
                        {
                            j.HasKey("IdProgressLog", "IdBlobs").HasName("PK__Progress__2DDCFBE924DDA683");

                            j.ToTable("ProgressLogsBlobs");

                            j.IndexerProperty<int>("IdProgressLog").HasColumnName("ID_ProgressLog");

                            j.IndexerProperty<int>("IdBlobs").HasColumnName("ID_Blobs");
                        });
            });

            modelBuilder.Entity<ProgressReport>(entity =>
            {
                entity.HasKey(e => e.IdProgressReport)
                    .HasName("PK__Progress__2DC7E849EE4E1FED");

                entity.HasOne(d => d.IdApartmentNavigation)
                    .WithMany(p => p.ProgressReports)
                    .HasForeignKey(d => d.IdApartment)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ProgressReports_ID_Apartment");

                entity.HasOne(d => d.IdAreaNavigation)
                    .WithMany(p => p.ProgressReports)
                    .HasForeignKey(d => d.IdArea)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ProgressReports_ID_Area");

                entity.HasOne(d => d.IdBuildingNavigation)
                    .WithMany(p => p.ProgressReports)
                    .HasForeignKey(d => d.IdBuilding)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ProgressReports_ID_Building");

                entity.HasOne(d => d.IdElementNavigation)
                    .WithMany(p => p.ProgressReports)
                    .HasForeignKey(d => d.IdElement)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_ProgressReports_ID_Element");

                entity.HasOne(d => d.IdSubElementNavigation)
                    .WithMany(p => p.ProgressReports)
                    .HasForeignKey(d => d.IdSubElement)
                    .HasConstraintName("FK_ProgressReports_ID_SubElement");

                entity.HasOne(d => d.IdSupervisorNavigation)
                    .WithMany(p => p.ProgressReports)
                    .HasForeignKey(d => d.IdSupervisor)
                    .HasConstraintName("FK_ProgressReports_ID_Supervisor");
            });

            modelBuilder.Entity<Status>(entity =>
            {
                entity.HasKey(e => e.IdStatus)
                    .HasName("PK__Statuses__5AC2A7347B1A3A31");
            });

            modelBuilder.Entity<SubElement>(entity =>
            {
                entity.HasKey(e => e.IdSubElement)
                    .HasName("PK__SubEleme__CFE5FC21FAE59E3D");

                entity.HasOne(d => d.IdElementNavigation)
                    .WithMany(p => p.SubElements)
                    .HasForeignKey(d => d.IdElement)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_SubElements_ID_Element");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}